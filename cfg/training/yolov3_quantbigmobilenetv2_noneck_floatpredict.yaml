# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# darknet53 backbone
backbone:
  # [from, number, module, args]
  # Conv args [filters, ksize, stride]
  # InvertedResidual args [out_channels, stride, expand_ratio]
  [[-1, 1, QuantConvBNReLU, [32, 3, 2]],          # 0
   [-1, 1, QuantInvertedResidual, [32, 1, 1]],
   [-1, 1, QuantInvertedResidual, [32, 2, 6]],   # 2 stride 4
   [-1, 1, QuantInvertedResidual, [32, 1, 6]],

   [-1, 1, QuantInvertedResidual, [64, 2, 6]],   # 4 stride 8
   [-1, 3, QuantInvertedResidual, [64, 1, 6]],

   [-1, 1, QuantInvertedResidual, [128, 2, 6]],   # 6 stride 16
   [-1, 3, QuantInvertedResidual, [128, 1, 6]],

   [-1, 1, QuantInvertedResidual, [256, 1, 6]],   # 8 stride 16
   [-1, 3, QuantInvertedResidual, [256, 1, 6]],

   [-1, 1, QuantInvertedResidual, [512, 2, 6]],  # 10 stride 32
   [-1, 3, QuantInvertedResidual, [512, 1, 6]],  

   [-1, 1, QuantInvertedResidual, [1024, 1, 6]],  # 12 stride 32
  ]

# YOLOv3 head
head:
  [
   [[-1, 9, 5], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]



# [net]
# batch=128
# subdivisions=2
# width=320
# height=320
# channels=3
# momentum=0.949
# decay=0.0005
# angle=0
# saturation=1.5
# exposure=1.5
# hue=.1


# learning_rate=0.001
# burn_in=4000
# max_batches=800020
# policy=steps
# steps=400000,650000
# scales=.1,.1

# [convolutional]
# filters=16
# size=3
# groups=1
# stride=2
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=16
# size=3
# groups=16
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=8
# size=1
# groups=1
# stride=1
# pad=1
# batch_normalize=1
# activation=linear


# invertedresidual 48 hidden, 12 out, stride 2
# 72 hidden, 12 out, stride 1, skip
# 72, 16, stride 2
# 96, 16, skip
# 96, 16, skip
# 92, 32, stride 2
# 192, 32, skip
# 192, 32, skip
# 192, 32, skip
# 192, 48
# 288, 48, skip
# 288, 48, skip
# 288, 48, skip
# 288, 80, stride 2
# 480, 80, skip
# 480, 80, skip

# ### SPP ###
# [maxpool]
# stride=1
# size=3

# [route]
# layers=-2

# [maxpool]
# stride=1
# size=5

# [route]
# layers=-4

# [maxpool]
# stride=1
# size=9

# [route]
# layers=-1,-3,-5,-6

# ### End SPP ###
# #################################
# [convolutional]
# filters=288
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=288
# size=3
# groups=288
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=96
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=384
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# size=1
# stride=1
# pad=1
# filters=255
# activation=linear


# [yolo]
# mask = 3,4,5
# anchors = 12, 18,  37, 49,  52,132, 115, 74, 119,199, 243,238
# classes=80
# num=6
# jitter=.1
# ignore_thresh = .5
# truth_thresh = 1
# random=0
# #################
# scale_x_y = 1.1
# iou_thresh=0.213
# cls_normalizer=1.0
# iou_normalizer=0.07
# iou_loss=ciou
# nms_kind=greedynms
# beta_nms=0.6

# ##################################
# [route]
# layers= 64

# [upsample]
# stride=2

# [route]
# layers=-1,47
# #################################
# [convolutional]
# filters=80
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu


# [convolutional]
# filters=288
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=288
# size=3
# groups=288
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=192
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# filters=288
# size=1
# stride=1
# pad=1
# batch_normalize=1
# activation=relu

# [convolutional]
# size=1
# stride=1
# pad=1
# filters=255
# activation=linear


# [yolo]
# mask = 0,1,2
# anchors = 12, 18,  37, 49,  52,132, 115, 74, 119,199, 243,238
# classes=80
# num=6
# jitter=.1
# ignore_thresh = .5
# truth_thresh = 1
# random=0
# #################
# scale_x_y = 1.05
# iou_thresh=0.213
# cls_normalizer=1.0
# iou_normalizer=0.07
# iou_loss=ciou
# nms_kind=greedynms
# beta_nms=0.6